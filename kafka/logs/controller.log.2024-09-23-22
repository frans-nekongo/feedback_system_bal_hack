[2024-09-23 22:03:13,216] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:03:13,217] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:03:13,219] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-09-23 22:03:13,223] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:08:13,223] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:08:13,223] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:08:13,224] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-09-23 22:08:13,224] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:13:13,224] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:13:13,224] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:13:13,224] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2024-09-23 22:13:13,224] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:16:59,439] INFO [Controller id=0] New topics: [Set(dermatology_scheduling_requests)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(dermatology_scheduling_requests,Some(H90hVKmORTOWMyk7YSOgbw),Map(dermatology_scheduling_requests-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:16:59,439] INFO [Controller id=0] New partition creation callback for dermatology_scheduling_requests-0 (kafka.controller.KafkaController)
[2024-09-23 22:16:59,446] INFO [RequestSendThread controllerId=0] Controller 0 connected to RXDS:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-23 22:17:00,969] INFO [Controller id=0] New topics: [Set(gastroenterology_scheduling_requests)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gastroenterology_scheduling_requests,Some(6ZuCwcY0QYOHrGVtsiZABw),Map(gastroenterology_scheduling_requests-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:00,969] INFO [Controller id=0] New partition creation callback for gastroenterology_scheduling_requests-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:02,377] INFO [Controller id=0] New topics: [Set(gynaecology_scheduling_requests)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gynaecology_scheduling_requests,Some(gXM58WK4QEK3ZoIpTgm2fQ),Map(gynaecology_scheduling_requests-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:02,377] INFO [Controller id=0] New partition creation callback for gynaecology_scheduling_requests-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:03,697] INFO [Controller id=0] New topics: [HashSet(dermatology_success)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(dermatology_success,Some(IKN1A42LTFOmsFaqXYIOmQ),Map(dermatology_success-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:03,697] INFO [Controller id=0] New partition creation callback for dermatology_success-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:05,116] INFO [Controller id=0] New topics: [HashSet(gastroenterology_success)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gastroenterology_success,Some(VQDxFvKSQ2e-couyfnYMgQ),Map(gastroenterology_success-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:05,116] INFO [Controller id=0] New partition creation callback for gastroenterology_success-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:06,537] INFO [Controller id=0] New topics: [HashSet(gynaecology_success)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gynaecology_success,Some(oseQnNxuSYGXej6lmzqGKg),Map(gynaecology_success-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:06,537] INFO [Controller id=0] New partition creation callback for gynaecology_success-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:07,919] INFO [Controller id=0] New topics: [HashSet(dermatology_scheduling_coordination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(dermatology_scheduling_coordination,Some(yVmPqnkzSq2OZ8CT2_kIeg),Map(dermatology_scheduling_coordination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:07,919] INFO [Controller id=0] New partition creation callback for dermatology_scheduling_coordination-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:09,568] INFO [Controller id=0] New topics: [HashSet(gastroenterology_scheduling_coordination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gastroenterology_scheduling_coordination,Some(0HYnQangT1ydPR33lFqLPA),Map(gastroenterology_scheduling_coordination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:09,569] INFO [Controller id=0] New partition creation callback for gastroenterology_scheduling_coordination-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:11,034] INFO [Controller id=0] New topics: [HashSet(gynaecology_scheduling_coordination)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gynaecology_scheduling_coordination,Some(RMIdW1zwTUanB8GUQb1VNQ),Map(gynaecology_scheduling_coordination-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:11,034] INFO [Controller id=0] New partition creation callback for gynaecology_scheduling_coordination-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:12,451] INFO [Controller id=0] New topics: [HashSet(dermatology_conflict_response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(dermatology_conflict_response,Some(Ae9WXllfR9Cw37n-WcqboA),Map(dermatology_conflict_response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:12,451] INFO [Controller id=0] New partition creation callback for dermatology_conflict_response-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:13,984] INFO [Controller id=0] New topics: [HashSet(gastroenterology_conflict_response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gastroenterology_conflict_response,Some(SCtFCEHvRV606zsOX9YlJA),Map(gastroenterology_conflict_response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:13,984] INFO [Controller id=0] New partition creation callback for gastroenterology_conflict_response-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:15,461] INFO [Controller id=0] New topics: [HashSet(gynaecology_conflict_response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(gynaecology_conflict_response,Some(SY3z_lvuRIOGMu0I51pNJA),Map(gynaecology_conflict_response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:15,461] INFO [Controller id=0] New partition creation callback for gynaecology_conflict_response-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:16,803] INFO [Controller id=0] New topics: [HashSet(health_admin_confirmations)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(health_admin_confirmations,Some(ULL_CJIXT4Cme8i2-_YgWg),Map(health_admin_confirmations-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:16,803] INFO [Controller id=0] New partition creation callback for health_admin_confirmations-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:18,188] INFO [Controller id=0] New topics: [HashSet(health_admin_requests_for_alternatives)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(health_admin_requests_for_alternatives,Some(2RMJ6VdTTL-4zTlu9XL6Zg),Map(health_admin_requests_for_alternatives-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:18,188] INFO [Controller id=0] New partition creation callback for health_admin_requests_for_alternatives-0 (kafka.controller.KafkaController)
[2024-09-23 22:17:19,571] INFO [Controller id=0] New topics: [HashSet(health_admin_error_logs)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(health_admin_error_logs,Some(aY4F6kKwQQKSb7zLTzP8MA),Map(health_admin_error_logs-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:17:19,571] INFO [Controller id=0] New partition creation callback for health_admin_error_logs-0 (kafka.controller.KafkaController)
[2024-09-23 22:18:13,225] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:18:13,225] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:18:13,225] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:18:13,225] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:23:13,226] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:23:13,226] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:23:13,226] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:23:13,226] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:28:03,204] INFO [Controller id=0] New topics: [HashSet(Gastroenterology_Appointment_Info_Request)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Gastroenterology_Appointment_Info_Request,Some(d-xil7qnSa6uItAc8cRjzg),Map(Gastroenterology_Appointment_Info_Request-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:03,204] INFO [Controller id=0] New partition creation callback for Gastroenterology_Appointment_Info_Request-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:03,208] INFO [RequestSendThread controllerId=0] Controller 0 connected to RXDS:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-23 22:28:04,386] INFO [Controller id=0] New topics: [HashSet(Gastroenterology_Appointment_Info_Response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Gastroenterology_Appointment_Info_Response,Some(9bps3EBCT0q9sY6FGBv4pg),Map(Gastroenterology_Appointment_Info_Response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:04,386] INFO [Controller id=0] New partition creation callback for Gastroenterology_Appointment_Info_Response-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:05,615] INFO [Controller id=0] New topics: [HashSet(Dermatology_Appointment_Info_Request)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Dermatology_Appointment_Info_Request,Some(Q8ftsBYNSmerVfS0FLdOiQ),Map(Dermatology_Appointment_Info_Request-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:05,615] INFO [Controller id=0] New partition creation callback for Dermatology_Appointment_Info_Request-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:06,859] INFO [Controller id=0] New topics: [HashSet(Dermatology_Appointment_Info_Response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Dermatology_Appointment_Info_Response,Some(9M81M8C9RSSnElYAOa8n0w),Map(Dermatology_Appointment_Info_Response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:06,859] INFO [Controller id=0] New partition creation callback for Dermatology_Appointment_Info_Response-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:08,086] INFO [Controller id=0] New topics: [HashSet(Gynaecology_Appointment_Info_Request)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Gynaecology_Appointment_Info_Request,Some(f8aN7eu9TTWbvWqwFjsweg),Map(Gynaecology_Appointment_Info_Request-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:08,086] INFO [Controller id=0] New partition creation callback for Gynaecology_Appointment_Info_Request-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:09,376] INFO [Controller id=0] New topics: [HashSet(Gynaecology_Appointment_Info_Response)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(Gynaecology_Appointment_Info_Response,Some(bcBOgSg8QRCMU6EdQ64eeA),Map(Gynaecology_Appointment_Info_Response-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:28:09,376] INFO [Controller id=0] New partition creation callback for Gynaecology_Appointment_Info_Response-0 (kafka.controller.KafkaController)
[2024-09-23 22:28:13,227] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:28:13,227] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:28:13,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:28:13,228] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:33:13,228] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:33:13,229] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:33:13,229] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:33:13,230] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:38:13,230] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:38:13,230] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:38:13,231] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:38:13,231] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:43:13,231] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:43:13,231] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:43:13,231] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:43:13,231] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:45:11,576] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-09-23 22:45:11,580] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-09-23 22:45:29,525] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(bRXTGSHaQtutjijFFRMySQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-23 22:45:29,526] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-09-23 22:45:29,562] INFO [RequestSendThread controllerId=0] Controller 0 connected to RXDS:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-23 22:48:13,232] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:48:13,232] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:48:13,232] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:48:13,232] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:53:13,233] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:53:13,233] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:53:13,234] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:53:13,234] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-23 22:58:13,234] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-23 22:58:13,234] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-23 22:58:13,235] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-23 22:58:13,235] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
